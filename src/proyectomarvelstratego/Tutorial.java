/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyectomarvelstratego;

import java.awt.Color;
import javax.swing.JOptionPane;

/*por si se pone musica
import java.io.File;
import java.io.IOException;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;*/

/**
 *
 * @author Gabby
 */
public class Tutorial extends javax.swing.JFrame {

    /**
     * Creates new form Tutorial
     */
    public Tutorial() {
        initComponents();
        //reproducirMusica();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);

        // Rutas de los gifs para cada slide
        String gif1Path = "src/img/tutorial1.gif";//intro
        String gif2Path = "src/img/zonasProhibidas.gif";//nomas de ejemplos por mientras
        String gif3Path = "src/img/tableroTutorial.gif";
        String gif4Path = "src/img/considerar.gif";
        String gif5Path = "src/img/tuto.gif";
        String gif6Path = "src/img/tutorialMovimientos.gif";
        String gif7Path = "src/img/Movimiento1.gif";
        String gif8Path = "src/img/Movimiento2.gif";
        String gif9Path = "src/img/Movimiento3.gif";
        String gif10Path = "src/img/Movimiento4.gif";
        String gif11Path = "src/img/Movimiento5.gif";
        String gif12Path = "src/img/Movimiento6.gif";
        String gif13Path = "src/img/Movimiento7.gif";
        String gif14Path = "src/img/Movimiento8.gif";
        String gif15Path = "src/img/Movimiento9.gif";
        String gif16Path = "src/img/TutorialEnd.gif";

        tutorialSlidePanel.init(
            new tutorialPanel("Intro", new Color(0, 0, 0), gif1Path),
            new tutorialPanel("zonasProhibidas", new Color(0, 0, 0), gif2Path),
            new tutorialPanel("tableroTutorial", new Color(0, 0, 0), gif3Path),
            new tutorialPanel("considerar", new Color(0, 0, 0), gif4Path),
            new tutorialPanel("tuto", new Color(0, 0, 0), gif5Path),
            new tutorialPanel("tutorialMovimientos", new Color(0, 0, 0), gif6Path),
            new tutorialPanel("Movimiento1", new Color(0, 0, 0), gif7Path),
            new tutorialPanel("Movimiento2", new Color(0, 0, 0), gif8Path),
            new tutorialPanel("Movimiento3", new Color(0, 0, 0), gif9Path),
            new tutorialPanel("Movimiento4", new Color(0, 0, 0), gif10Path),
            new tutorialPanel("Movimiento5", new Color(0, 0, 0), gif11Path),
            new tutorialPanel("Movimiento6", new Color(0, 0, 0), gif12Path),
            new tutorialPanel("Movimiento7", new Color(0, 0, 0), gif13Path),
            new tutorialPanel("Movimiento8", new Color(0, 0, 0), gif14Path),
            new tutorialPanel("Movimiento9", new Color(0, 0, 0), gif15Path),
            new tutorialPanel("TutorialEnd", new Color(0, 0, 0), gif16Path)
        );
        tutorialSlidePanel.setSpeed(20);
        
        Color backgroundColor = new Color(66, 84, 87);
        getContentPane().setBackground(backgroundColor);
    }
    /*private void reproducirMusica() {
        try {
            // Obtener el archivo de música
            File archivoMusica = new File("src/sounds/musica.wav");

            // Crear un objeto AudioInputStream
            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(archivoMusica);

            // Obtener un objeto Clip para reproducir el sonido
            Clip clip = AudioSystem.getClip();

            // Abrir el Clip con el AudioInputStream
            clip.open(audioInputStream);

            // Reproducir el sonido en un bucle continuo
            clip.loop(Clip.LOOP_CONTINUOUSLY);
        } catch (IOException | LineUnavailableException | UnsupportedAudioFileException e) {
            e.printStackTrace();
        }
    }*/
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tutorialSlidePanel = new proyectomarvelstratego.tutorialSlidePanel();
        btnRetroceder = new javax.swing.JButton();
        btnAvanzar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout tutorialSlidePanelLayout = new javax.swing.GroupLayout(tutorialSlidePanel);
        tutorialSlidePanel.setLayout(tutorialSlidePanelLayout);
        tutorialSlidePanelLayout.setHorizontalGroup(
            tutorialSlidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        tutorialSlidePanelLayout.setVerticalGroup(
            tutorialSlidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 637, Short.MAX_VALUE)
        );

        btnRetroceder.setBackground(new java.awt.Color(0, 51, 51));
        btnRetroceder.setForeground(new java.awt.Color(0, 255, 204));
        btnRetroceder.setText("<");
        btnRetroceder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetrocederActionPerformed(evt);
            }
        });

        btnAvanzar.setBackground(new java.awt.Color(0, 51, 51));
        btnAvanzar.setForeground(new java.awt.Color(0, 255, 204));
        btnAvanzar.setText(">");
        btnAvanzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvanzarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tutorialSlidePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(671, Short.MAX_VALUE)
                .addComponent(btnRetroceder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAvanzar)
                .addGap(558, 558, 558))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tutorialSlidePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRetroceder)
                    .addComponent(btnAvanzar))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRetrocederActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetrocederActionPerformed
        // TODO add your handling code here:
        tutorialSlidePanel.previous();
    }//GEN-LAST:event_btnRetrocederActionPerformed

    private void btnAvanzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvanzarActionPerformed
        // TODO add your handling code here:
        int slideCount = tutorialSlidePanel.getSlideCount();
        int currentSlide = tutorialSlidePanel.getCurrentShowing();

        if (currentSlide < slideCount - 1) {
            tutorialSlidePanel.next();
        } else {
            // Se ha alcanzado la última slide
            int option = JOptionPane.showOptionDialog(this, "¿Desea ver el tutorial de nuevo?", "Repetir tutorial", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);

            if (option == JOptionPane.YES_OPTION) {
                // Reiniciar el tutorial a la primera slide (intro)
                tutorialSlidePanel.show(0);
            } else {
                //System.exit(0);
                this.dispose();
            }
        }
    }//GEN-LAST:event_btnAvanzarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tutorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tutorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tutorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tutorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tutorial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvanzar;
    private javax.swing.JButton btnRetroceder;
    private proyectomarvelstratego.tutorialSlidePanel tutorialSlidePanel;
    // End of variables declaration//GEN-END:variables
}
