/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package proyectomarvelstratego;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.Timer;

/**
 *
 * @author Gabby
 */
public class tutorialSlidePanel extends javax.swing.JPanel {

    /**
     * Creates new form tutorialSlidePanel
     */
    public tutorialSlidePanel() {
        initComponents();
        list=new ArrayList<>();
        timer=new Timer(0,new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent se){
                animate();
            }
        });
    }
    private final List<Component> list;
    private final Timer timer;
    private Component comExit;
    private Component comShow;
    private int currentShowing;
    private boolean animateRight;
    private int speed=1;
    
    public int getSpeed(){
        return speed;
    }
    
    public void setSpeed(int speed){
        this.speed=speed;
    }
    
    public int getCurrentShowing() {
        return currentShowing;
    }

    public int getSlideCount() {
        return list.size();
    }
    public void init(Component... com){
        if (com.length>0){
            for (Component c : com){
                list.add(c);
                c.setSize(getSize());
                c.setVisible(false);
                this.add(c);
            }
            Component show = list.get(0);
            show.setVisible(true);
            show.setLocation(0, 0);
        }
    }
    
    public void show(int index){
        if(!timer.isRunning()){
            if(list.size() > 2 && index < list.size() && index != currentShowing){
                comShow=list.get(index);
                comExit=list.get(currentShowing);
                animateRight=index < currentShowing;
                currentShowing = index;
                comShow.setVisible(true);
                if(animateRight){
                    comShow.setLocation(-comShow.getWidth(),0);
                }
                else{
                    comShow.setLocation(getWidth(),0);
                }
                timer.start();
            }
        }
    }
    private void animate(){
        if (animateRight){
            if (comShow.getLocation().x<0){
                comShow.setLocation(comShow.getLocation().x+speed,0);
                comExit.setLocation(comExit.getLocation().x+speed,0);
            }
            else {
                comShow.setLocation(0,0);
                timer.stop();
                comExit.setVisible(false);
            }
        }else{
            if (comShow.getLocation().x>0){
                comShow.setLocation(comShow.getLocation().x-speed,0);
                comExit.setLocation(comExit.getLocation().x-speed,0);
            }
            else{
                comShow.setLocation(0,0);
                timer.stop();
                comExit.setVisible(false);
            }
        }
    }
    
        public void previous() {
        int index = currentShowing - 1;
        if (index >= 0) {
            show(index);
        }
    }

    public void next() {
        int index = currentShowing + 1;
        if (index < list.size()) {
            show(index);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
